from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from typing import List

# –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (ReplyKeyboard)
def get_main_keyboard(is_admin: bool = False) -> ReplyKeyboardMarkup:
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="üèõÔ∏è –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ—Ö–æ—Ä–æ–Ω"))
    builder.add(KeyboardButton(text="ü§ñ AI-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º"))
    builder.add(KeyboardButton(text="üõçÔ∏è –¢–æ–≤–∞—Ä—ã"))
    builder.add(KeyboardButton(text="üïØÔ∏è –£–≥–æ–ª–æ–∫ –ø–∞–º—è—Ç–∏"))
    builder.add(KeyboardButton(text="üë§ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"))
    if is_admin:
        builder.add(KeyboardButton(text="üõ† –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"))
    builder.add(KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"))
    builder.add(KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å"))
    builder.adjust(2)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
def get_admin_panel_keyboard() -> ReplyKeyboardMarkup:
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä"))
    builder.add(KeyboardButton(text="‚ûñ –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä"))
    builder.add(KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    builder.adjust(1)
    return builder.as_markup(resize_keyboard=True, one_time_keyboard=False)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥ –¥–ª—è –ø–æ—Ö–æ—Ä–æ–Ω (inline)
def get_funeral_services_keyboard(selected: List[str] = None) -> InlineKeyboardMarkup:
    if selected is None:
        selected = []
    builder = InlineKeyboardBuilder()
    services = [
        ("transport", "–ü–µ—Ä–µ–≤–æ–∑–∫–∞ —Ç–µ–ª–∞"),
        ("coffin", "–ì—Ä–æ–±"),
        ("wreaths", "–í–µ–Ω–∫–∏"),
        ("cross", "–ö—Ä–µ—Å—Ç"),
        ("hall", "–ü—Ä–æ—â–∞–ª—å–Ω—ã–π –∑–∞–ª"),
        ("ceremoniymaster", "–¶–µ—Ä–µ–º–æ–Ω–∏–π–º–µ–π—Å—Ç–µ—Ä"),
        ("simple_funeral", "–û–±—ã—á–Ω—ã–µ –ø–æ—Ö–æ—Ä–æ–Ω—ã"),
        ("cremation", "–ö—Ä–µ–º–∞—Ü–∏—è")
    ]
    for key, name in services:
        text = f"‚úÖ {name}" if key in selected else name
        builder.add(InlineKeyboardButton(text=text, callback_data=f"funeral_service:{key}"))
    builder.adjust(2)  # –†–∞–∑–º–µ—â–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ 2 –≤ —Ä—è–¥—É
    builder.row(InlineKeyboardButton(text="‚úÖ –ó–∞–∫–æ–Ω—á–∏—Ç—å –≤—ã–±–æ—Ä", callback_data="funeral_service:done"))
    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –±—é–¥–∂–µ—Ç–∞ (inline)
def get_funeral_budget_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–î–æ 50 000 —Ä—É–±.", callback_data="budget:50000"))
    builder.add(InlineKeyboardButton(text="–î–æ 70 000 —Ä—É–±.", callback_data="budget:70000"))
    builder.add(InlineKeyboardButton(text="–î–æ 90 000 —Ä—É–±.", callback_data="budget:90000"))
    builder.add(InlineKeyboardButton(text="–î–æ 110 000 —Ä—É–±.", callback_data="budget:110000"))
    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫—Ä–µ—Å—Ç–∞ (inline)
def get_cross_type_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="–ü—Ä–∞–≤–æ—Å–ª–∞–≤–Ω—ã–π –∫—Ä–µ—Å—Ç", callback_data="cross:orthodox"))
    builder.add(InlineKeyboardButton(text="–ö–∞—Ç–æ–ª–∏—á–µ—Å–∫–∏–π –∫—Ä–µ—Å—Ç", callback_data="cross:catholic"))
    builder.add(InlineKeyboardButton(text="–ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–π –∫—Ä–µ—Å—Ç", callback_data="cross:metal"))
    builder.add(InlineKeyboardButton(text="–î–µ—Ä–µ–≤—è–Ω–Ω—ã–π –∫—Ä–µ—Å—Ç", callback_data="cross:wood"))
    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–º–µ–Ω—ã (ReplyKeyboard)
def get_cancel_keyboard() -> ReplyKeyboardMarkup:
    builder = ReplyKeyboardBuilder()
    builder.add(KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞"))
    return builder.as_markup(resize_keyboard=True)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç–æ–≤–∞—Ä–æ–≤ (inline)
def get_shop_categories_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚ö∞Ô∏è –ì—Ä–æ–±—ã", callback_data="shop:category:coffin"))
    builder.add(InlineKeyboardButton(text="üíê –í–µ–Ω–∫–∏", callback_data="shop:category:wreath"))
    builder.add(InlineKeyboardButton(text="‚úùÔ∏è –ö—Ä–µ—Å—Ç—ã", callback_data="shop:category:cross"))
    builder.add(InlineKeyboardButton(text="üõí –í—Å–µ —Ç–æ–≤–∞—Ä—ã", callback_data="shop:category:all"))
    builder.adjust(2)
    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ç–æ–≤–∞—Ä–∞ (inline)
def get_product_keyboard(product_id: int, price: float) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text=f"üõí –í—ã–±—Ä–∞—Ç—å ({price} ‚ÇΩ)", callback_data=f"product:select:{product_id}"))
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="shop:back"))
    builder.adjust(1)
    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–≥–æ–ª–∫–∞ –ø–∞–º—è—Ç–∏ (inline)
def get_memory_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å", callback_data="memory:create"))
    builder.add(InlineKeyboardButton(text="üìñ –ú–æ–∏ –∑–∞–ø–∏—Å–∏", callback_data="memory:my_records"))
    builder.add(InlineKeyboardButton(text="üïØÔ∏è –í—Å–µ –∑–∞–ø–∏—Å–∏", callback_data="memory:all_records"))
    builder.adjust(1)
    return builder.as_markup()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–ø–∏—Å–∏ –ø–∞–º—è—Ç–∏ (inline)
def get_memory_record_keyboard(record_id: int, can_add_candle: bool = True) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    if can_add_candle:
        builder.add(InlineKeyboardButton(text="üïØÔ∏è –ó–∞–∂–µ—á—å —Å–≤–µ—á—É", callback_data=f"memory:candle:{record_id}"))
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="memory:back"))
    builder.adjust(1)
    return builder.as_markup()

# ========== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø ==========

def get_registration_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="registration:start"))
    builder.add(InlineKeyboardButton(text="üë§ –ú–æ–∏ –¥–∞–Ω–Ω—ã–µ", callback_data="registration:my_data"))
    builder.adjust(1)
    return builder.as_markup()

def get_registration_confirm_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="registration:confirm"))
    builder.add(InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å", callback_data="registration:edit"))
    builder.add(InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="registration:cancel"))
    builder.adjust(2)
    return builder.as_markup()

def get_registration_edit_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="üë§ –§–ò–û", callback_data="registration:edit:full_name"))
    builder.add(InlineKeyboardButton(text="üì± –¢–µ–ª–µ—Ñ–æ–Ω", callback_data="registration:edit:phone"))
    builder.add(InlineKeyboardButton(text="üìß Email", callback_data="registration:edit:email"))
    builder.add(InlineKeyboardButton(text="üìÖ –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", callback_data="registration:edit:birth_date"))
    builder.add(InlineKeyboardButton(text="üÜî –°–µ—Ä–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞", callback_data="registration:edit:passport_series"))
    builder.add(InlineKeyboardButton(text="üî¢ –ù–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞", callback_data="registration:edit:passport_number"))
    builder.add(InlineKeyboardButton(text="üèõÔ∏è –ö–µ–º –≤—ã–¥–∞–Ω", callback_data="registration:edit:passport_issued_by"))
    builder.add(InlineKeyboardButton(text="üìÖ –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏", callback_data="registration:edit:passport_issue_date"))
    builder.add(InlineKeyboardButton(text="üè† –ê–¥—Ä–µ—Å", callback_data="registration:edit:address"))
    builder.add(InlineKeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏", callback_data="registration:edit:emergency_contact"))
    builder.add(InlineKeyboardButton(text="üë• –û—Ç–Ω–æ—à–µ–Ω–∏–µ", callback_data="registration:edit:relationship"))
    builder.adjust(2)
    return builder.as_markup()

def get_client_data_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="registration:edit"))
    builder.add(InlineKeyboardButton(text="‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å", callback_data="registration:verify"))
    builder.add(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="registration:back"))
    builder.adjust(2)
    return builder.as_markup()
from aiogram.types import (
    InlineKeyboardMarkup, InlineKeyboardButton,
    ReplyKeyboardMarkup, KeyboardButton
)
from aiogram.utils.keyboard import InlineKeyboardBuilder, ReplyKeyboardBuilder
from typing import List

# ... (–≤—Å–µ —Ç–≤–æ–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –≤—ã—à–µ, –æ—Å—Ç–∞–≤—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

# === –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ AI-–∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ ===
def get_ai_lawyer_actions_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="‚ùì –ó–∞–¥–∞—Ç—å –µ—â—ë –≤–æ–ø—Ä–æ—Å", callback_data="ai_lawyer:ask_again"),
        InlineKeyboardButton(text="üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é", callback_data="ai_lawyer:to_main")
    )
    builder.adjust(1)  # 2 - –≤ —Ä—è–¥, 1 - —Å—Ç–æ–ª–±–µ—Ü
    return builder.as_markup()
